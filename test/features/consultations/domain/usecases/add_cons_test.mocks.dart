// Mocks generated by Mockito 5.0.7 from annotations
// in tabibi/test/features/consultations/domain/usecases/add_cons_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tabibi/core/error/failures.dart' as _i6;
import 'package:tabibi/features/consultations/domain/entities/consultation.dart'
    as _i5;
import 'package:tabibi/features/consultations/domain/repositories/consultation_repo.dart'
    as _i3;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [ConsultationRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockConsultationRepo extends _i1.Mock implements _i3.ConsultationRepo {
  MockConsultationRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> addConsultation(_i5.Consultation? consultation) =>
      (super.noSuchMethod(Invocation.method(#addConsultation, [consultation]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<_i2.Either<_i6.Failure, List<_i5.Consultation>>> getCons() =>
      (super.noSuchMethod(Invocation.method(#getCons, []),
              returnValue:
                  Future<_i2.Either<_i6.Failure, List<_i5.Consultation>>>.value(
                      _FakeEither<_i6.Failure, List<_i5.Consultation>>()))
          as _i4.Future<_i2.Either<_i6.Failure, List<_i5.Consultation>>>);
  @override
  _i4.Future<_i2.Either<_i6.Failure, List<_i5.Consultation>>> getMyCons(
          String? userId) =>
      (super.noSuchMethod(Invocation.method(#getMyCons, [userId]),
              returnValue:
                  Future<_i2.Either<_i6.Failure, List<_i5.Consultation>>>.value(
                      _FakeEither<_i6.Failure, List<_i5.Consultation>>()))
          as _i4.Future<_i2.Either<_i6.Failure, List<_i5.Consultation>>>);
  @override
  _i4.Future<_i2.Either<_i6.Failure, List<_i5.Consultation>>> getConsBySpeci(
          String? specialization) =>
      (super.noSuchMethod(Invocation.method(#getConsBySpeci, [specialization]),
              returnValue:
                  Future<_i2.Either<_i6.Failure, List<_i5.Consultation>>>.value(
                      _FakeEither<_i6.Failure, List<_i5.Consultation>>()))
          as _i4.Future<_i2.Either<_i6.Failure, List<_i5.Consultation>>>);
}
